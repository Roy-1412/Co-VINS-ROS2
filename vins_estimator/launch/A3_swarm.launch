from launch import LaunchDescription
from launch.actions import DeclareLaunchArgument, GroupAction, ExecuteProcess
from launch.substitutions import LaunchConfiguration, PathJoinSubstitution, FindExecutable
from launch_ros.actions import Node, PushRosNamespace
from ament_index_python.packages import get_package_share_directory

def generate_launch_description():
    # Launch arguments for bag files
    seq_args = []
    for i in range(1, 5):
        seq_args.append(
            DeclareLaunchArgument(
                f'sequence_{i}',
                default_value=f'/home/tony-ws1/bag/iser2018/swarm_bag/{i}.bag',
                description=f'Bag file for agent {i}'
            )
        )

    # Common config paths
    feature_tracker_share = get_package_share_directory('feature_tracker')
    default_config = PathJoinSubstitution([feature_tracker_share, 'config', 'A3', 'A3_config_local.yaml'])
    default_vins_folder = PathJoinSubstitution([feature_tracker_share, '..'])

    # Groups for each agent
    agent_groups = []
    # original start delays: agent1:10s, agent2:8s, agent3:5s, agent4:4s
    delays = {1: '10', 2: '8', 3: '5', 4: '4'}
    for i in range(1, 5):
        ns = f'vins_{i}'
        group = GroupAction(
            actions=[
                PushRosNamespace(ns),
                # feature_tracker node
                Node(
                    package='feature_tracker', executable='feature_tracker', name='feature_tracker',
                    output='screen',
                    parameters=[
                        {'config_file': default_config},
                        {'vins_folder': default_vins_folder},
                        {'agent_num': i}
                    ]
                ),
                # vins_estimator node
                Node(
                    package='vins_estimator', executable='vins_estimator', name='vins_estimator',
                    output='screen',
                    parameters=[{'agent_num': i}]
                ),
                # ros2 bag play
                ExecuteProcess(
                    cmd=[
                        FindExecutable(name='ros2'), 'bag', 'play', LaunchConfiguration(f'sequence_{i}'),
                        '--delay', delays[i],
                        '--rate', '0.5',
                        '--remap', '/dji_sdk_1/dji_sdk/imu:=dji_sdk_1/dji_sdk/imu',
                        '--remap', '/hcfox_1/image:=hcfox_1/image'
                    ],
                    output='screen'
                )
            ]
        )
        agent_groups.append(group)

    # pose_graph node
    pose_graph_node = Node(
        package='pose_graph', executable='pose_graph', name='pose_graph', output='screen',
        parameters=[
            {'visualization_shift_x': 0},
            {'visualization_shift_y': 0},
            {'skip_cnt': 0},
            {'skip_dis': 0.0},
            {'pose_graph_save_path': '/home/ri/raw_data/pose_graph/'},
            {'pose_graph_result_path': '/home/tony-ws1/output/'}
        ]
    )

    # RViz2 visualization node
    rviz_node = Node(
        package='rviz2', executable='rviz2', name='rvizvisualisation', output='screen',
        arguments=[
            '-d',
            PathJoinSubstitution([
                get_package_share_directory('vins_estimator'),
                'config', 'multi_agent_rviz.rviz'
            ])
        ]
    )

    return LaunchDescription(
        seq_args +
        agent_groups +
        [pose_graph_node, rviz_node]
    )
