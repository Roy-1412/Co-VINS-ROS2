from launch import LaunchDescription
from launch.actions import DeclareLaunchArgument, GroupAction
from launch.substitutions import LaunchConfiguration, PathJoinSubstitution, TextSubstitution, ConcatSubstitution
from launch_ros.actions import Node, PushRosNamespace
from ament_index_python.packages import get_package_share_directory


def generate_launch_description():
    # Declare drone_number argument
    drone_arg = DeclareLaunchArgument(
        'drone_number', default_value='1',
        description='Drone index for namespace prefix'
    )

    # Shared paths
    ft_share = get_package_share_directory('feature_tracker')
    cfg_path = PathJoinSubstitution([ft_share, 'config', 'A3', 'A3_config_local.yaml'])
    vins_folder = PathJoinSubstitution([ft_share, '..'])

    # Namespace: vins_<drone_number>
    ns_sub = ConcatSubstitution([
        TextSubstitution(text='vins_'),
        LaunchConfiguration('drone_number')
    ])

    # Group under the namespace
    group = GroupAction(
        actions=[
            PushRosNamespace(ns_sub),
            Node(
                package='feature_tracker', executable='feature_tracker', name='feature_tracker',
                output='screen',
                parameters=[
                    {'config_file': cfg_path},
                    {'vins_folder': vins_folder},
                    {'agent_num': LaunchConfiguration('drone_number')}
                ]
            ),
            Node(
                package='vins_estimator', executable='vins_estimator', name='vins_estimator',
                output='screen',
                parameters=[{'agent_num': LaunchConfiguration('drone_number')}]
            )
        ]
    )

    return LaunchDescription([
        drone_arg,
        group
    ])
