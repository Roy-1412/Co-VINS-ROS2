# ——— 1. 基础镜像 ———
FROM ros:humble-ros-base

# ——— 2. 环境变量 ———
ENV DEBIAN_FRONTEND=noninteractive \
    LANG=C.UTF-8 \
    LC_ALL=C.UTF-8 \
    ROS_DISTRO=humble \
    WORKSPACE=/root/Co-VINS-ROS2_ws

# ——— 3. 安装系统依赖 & ROS2 包 & Ceres ———
RUN apt-get update && apt-get install -y \
      build-essential \
      cmake \
      git \
      python3-colcon-common-extensions \
      python3-pip \
      libgoogle-glog-dev \
      libsuitesparse-dev \
      libeigen3-dev \
      libceres-dev \
      ros-${ROS_DISTRO}-cv-bridge \
      ros-${ROS_DISTRO}-image-transport \
      ros-${ROS_DISTRO}-pcl-ros \
      ros-${ROS_DISTRO}-tf2-ros \
      ros-${ROS_DISTRO}-rclcpp \
      ros-${ROS_DISTRO}-rmw-fastrtps-cpp \
      ros-${ROS_DISTRO}-rviz2 \
    && rm -rf /var/lib/apt/lists/*

# ——— 4. 创建工作空间根目录 ———
RUN mkdir -p ${WORKSPACE}
WORKDIR ${WORKSPACE}

# ——— 5. 拷贝各个包到工作空间根目录 ———
COPY feature_tracker    feature_tracker
COPY agent_msg          agent_msg
COPY pose_graph         pose_graph
COPY vins_estimator     vins_estimator
COPY camera_model       camera_model
# 如果还有其它包，请继续按格式添加

# ——— 6. 分两步构建：先 camera_model，再其它包 ———
RUN /bin/bash -lc "\
    source /opt/ros/${ROS_DISTRO}/setup.bash && \
    # 第1步：isolated 安装 camera_model 到 camera_install
    colcon build \
      --packages-select camera_model \
      --install-base camera_install \
      --parallel-workers \"$(nproc)\" && \
    \
    # 第2步：让 ROS 环境能“看见”camera_model
    source camera_install/setup.bash && \
    \
    # 构建其余包，并把 camera_model 忽略掉（已安装在 camera_install）
    colcon build \
      --packages-ignore camera_model \
      --merge-install \
      --parallel-workers \"$(nproc)\" \
"



# ——— 7. 容器入口，自动 source 环境 ———，自动 source 环境 ———，自动 source 环境 ———
ENTRYPOINT ["/bin/bash", "-c", \
  "source /opt/ros/${ROS_DISTRO}/setup.bash && \
   source install/setup.bash && \
   exec \"$@\"", \
  "--"]
CMD ["bash"]
